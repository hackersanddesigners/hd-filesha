# Why fileSHA

> 1. reflects on the motivation/fascination behind file-sharing as a purposeful activity as well as artistic, experimental non-solutionist way of discussing and challenging dogmas around information exchange online. 

> 500 words max

*fileSHA* was one of the H&D meetups organized during 2021 as part of the activities program of the year. It consisted of an email, turn-based game using a mailing-list software: think of a chat program happening over emails. You send a message to the list's email address and that message is sent to everyone else in the list. We carried out the game by using file-sharing as the activity, in which a random participant would receive a prompt email to share a file in whatever way they'd prefer, and the next random participant would need to get that file (sometimes by coordinating with the previous user) and then they'd have to decide how to use that input source with their own chosen file. Each time, no one else in the list would know what was going on except the two randomly chosen participants.

The project was born out of a personal curiosity and fascination with mailing-lists. One reason comes from a recurrent frustration which developed in the last 5-10 years whenever contributing to a certain online community, where often at some point you might find out how that place does not exist anymore because the software "is gone" (website is down, or it's being sold and the rules of the game have changed). This prompted the question: *what else is possible and available and that we might have forgotten?*

To be clear, this is not an exercise in software nostalgia.

Another reason stems from my endless fascination for a piece of software called `git`. This is what propelled the Linux project to be a viable, internet based, multiplayer effort. `git` uses emails as the main format to collaborate on a project, which means: mailing list. 

What can a mailing list afford? Looking up on the www for examples of old mailing-list, i found for instance [The cryptography archives](https://www.metzdowd.com/pipermail/cryptography/). The list goes back to 1970 (probably a Linux bug), and then up to the beginning of the 2000s. Would this have been possible with something like the now (2022) well known Discord software, an expressly "community" oriented web service? Does this have to do with Discord per se, or with the composition and evolution of the HTTP [^http] protocol?

[^http]: the HyperText Transfer Protocol. What's used to build websites and have them accessible online over the internet.

These points given, i dreamt of working with the email protocol and mailing-list, instead of the web. What's the UI offered by a mailing-list? How easy is it to join one? Which types of interaction can be designed in this space and which "social etiquette" can we use, or stretch, or ignore?

We decided to pick file sharing as the activity to carry out in the email-based game as it connects hand-in-hand with another interest of ours: peer2peer computing. Most p2p file-sharing software demands both users to be online at their computer at the same time, which introduces some nice, fun requirement in the context of a non real-time technique like emails: human coordination. Another reason to go with file-sharing is that it points to the access and archivability option of actually exchanging files instead of using cloud-based or streaming software, where instead files are accessed and "live" only online. As much as email are easily copyable, shareable and archivable, file-sharing provides similar capabilities.

---

(random snippets)

One of the main outcomes of these ruleset was to be able to coordinate in some ways between user A and user B. The time constrain of (in our experiment) 3 days put many people under pressure. 

> 2. it would be nice to show the game in a protocoling way.. as a how-to manual of sorts which could be carried out in different context by different people.

We start by assuming you have a similar enough software setup as described in the repo <put link>. This means:

- having access to an email server (could be on a VPS, on your laptop, on a single board computer, etc) <put link to article?>
- having installed the `mlmmj` mailing list software (see guide on H&D wiki, <upload article and put link>)
- following the README in the hd-filesha repo to setup a new list for the game (<not correct>)

This is a chain-based game, so the more people who join it, the better. Eg, at least 3 people. Since we setup a new list in the mailing list software, we can use that to let interested people join the game. 

As a matter of fact, this means that if you started the game and someone new will join the list during it, they will be part of the game process as much as anyone else (because the game script reads from the list of subscribers each and every time when doing a new action / next step in the game). Of course, you can decide to close subscriptions to the list too.

The game is based on the *exquisite corpse* format: someone initiates a collective action (usually a drawing or some writing), and passes it on. The next person will pick it up, without looking at what has been done previously, and add to it. And so on. The final outcome is the product of a collective process.

The type of action to perform during the game can be anything that fits the constraints of sending emails to each other. For our first experiment we went with the file sharing option:

- user A picks a (series of) file and a way to share them, then send an email to the mailing list address with instructions on how to get those files
- the mailing list picks a random email address (user B) part of the list and send them user A's email
- user B has x amount of time to obtain those files, pick a file sharing technique and a way on how to add or subtract to the files received from user A
- and so on

By default no user B knew from whom the email instruction came from, except in those cases where the file sharing technique required to interact with each other (eg when using a p2p file synchronization software) â€” and also in those cases, a pseudonym could be used.

The element of time is quite important. You can play the game across 3 weeks or in 10 minutes. The tick of the mailing list sending the next email influences much of the gameplay: how quick you should react and which eventual problem does your file sharing technique bring to the table (mutual coordination, file upload / download too slow, etc).
